import{_ as i,r as p,o as d,c as D,f as c,b as e,d as a,w as o,e as s,a as r}from"./app.83c59791.js";const u={},y=e("h1",{id:"c-display",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#c-display","aria-hidden":"true"},"#"),s(" c-display")],-1),h=s("A general-purpose component for displaying any "),m=s("Value"),_=s(" by rendering the value to a string with the "),f=s("display functions from the Models Layer"),v=s(". For plain string and number "),b=s("values"),g=s(", usage of this component is largely superfluous. For all other value types including dates, booleans, enums, objects, and collections, it is very handy."),C={class:"table-of-contents"},E=s("[DataTypeAttribute]"),k=s("Examples"),F=s("Props"),q=s("Slots"),x=r(`<h2 id="datatypeattribute" tabindex="-1"><a class="header-anchor" href="#datatypeattribute" aria-hidden="true">#</a> [DataTypeAttribute]</h2><p>For properties and other values annotated with [DataTypeAttribute], the following special handling occurs based on the data type:</p><ul><li><code>DataType.MultilineText</code>: Renders with <code>white-space: pre-wrap</code>.</li><li><code>DataType.Password</code>: Renders with a show/hide toggle (hidden by default), showing a fixed number of dot characters when hidden.</li><li><code>DataType.Url</code>: Renders as a clickable link.</li><li><code>DataType.EmailAddress</code>: Renders as a clickable <code>mailto</code> link.</li><li><code>DataType.PhoneNumber</code>: Renders as a clickable <code>tel</code> link.</li><li><code>DataType.ImageUrl</code>: Renders as an <code>img</code> element.</li></ul><h2 id="examples" tabindex="-1"><a class="header-anchor" href="#examples" aria-hidden="true">#</a> Examples</h2><p>Typical usage, providing an object and a property on that object:</p><div class="language-vue-html ext-vue-html line-numbers-mode"><pre class="shiki" style="background-color:#1E1E1E;"><code><span class="line"><span style="color:#808080;">&lt;</span><span style="color:#569CD6;">c-display</span><span style="color:#D4D4D4;"> :</span><span style="color:#9CDCFE;">model</span><span style="color:#D4D4D4;">=</span><span style="color:#D4D4D4;">&quot;</span><span style="color:#9CDCFE;">person</span><span style="color:#D4D4D4;">&quot;</span><span style="color:#D4D4D4;"> </span><span style="color:#9CDCFE;">for</span><span style="color:#D4D4D4;">=</span><span style="color:#CE9178;">&quot;gender&quot;</span><span style="color:#D4D4D4;"> /</span><span style="color:#808080;">&gt;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>Customizing date formatting:</p><div class="language-vue-html ext-vue-html line-numbers-mode"><pre class="shiki" style="background-color:#1E1E1E;"><code><span class="line"><span style="color:#808080;">&lt;</span><span style="color:#569CD6;">c-display</span><span style="color:#D4D4D4;"> :</span><span style="color:#9CDCFE;">model</span><span style="color:#D4D4D4;">=</span><span style="color:#D4D4D4;">&quot;</span><span style="color:#9CDCFE;">person</span><span style="color:#D4D4D4;">&quot;</span><span style="color:#D4D4D4;"> </span><span style="color:#9CDCFE;">for</span><span style="color:#D4D4D4;">=</span><span style="color:#CE9178;">&quot;birthDate&quot;</span><span style="color:#D4D4D4;"> </span><span style="color:#9CDCFE;">format</span><span style="color:#D4D4D4;">=</span><span style="color:#CE9178;">&quot;M/d/yyyy&quot;</span><span style="color:#D4D4D4;"> /</span><span style="color:#808080;">&gt;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div>`,8),w=s("A contrived example of using c-display to render the result of an "),T=s("API Caller"),R=s(":"),A=r(`<div class="language-vue-html ext-vue-html line-numbers-mode"><pre class="shiki" style="background-color:#1E1E1E;"><code><span class="line"><span style="color:#808080;">&lt;</span><span style="color:#569CD6;">c-display</span><span style="color:#D4D4D4;"> </span></span>
<span class="line"><span style="color:#D4D4D4;">    :</span><span style="color:#9CDCFE;">value</span><span style="color:#D4D4D4;">=</span><span style="color:#D4D4D4;">&quot;</span><span style="color:#9CDCFE;">person</span><span style="color:#D4D4D4;">.</span><span style="color:#9CDCFE;">setFirstName</span><span style="color:#D4D4D4;">.</span><span style="color:#9CDCFE;">result</span><span style="color:#D4D4D4;">&quot;</span><span style="color:#D4D4D4;"> </span></span>
<span class="line"><span style="color:#D4D4D4;">    :</span><span style="color:#9CDCFE;">for</span><span style="color:#D4D4D4;">=</span><span style="color:#D4D4D4;">&quot;</span><span style="color:#9CDCFE;">person</span><span style="color:#D4D4D4;">.</span><span style="color:#9CDCFE;">$metadata</span><span style="color:#D4D4D4;">.</span><span style="color:#9CDCFE;">methods</span><span style="color:#D4D4D4;">.</span><span style="color:#9CDCFE;">setFirstName</span><span style="color:#D4D4D4;">.</span><span style="color:#9CDCFE;">return</span><span style="color:#D4D4D4;">&quot;</span><span style="color:#D4D4D4;"> </span></span>
<span class="line"><span style="color:#D4D4D4;">    </span><span style="color:#9CDCFE;">element</span><span style="color:#D4D4D4;">=</span><span style="color:#CE9178;">&quot;div&quot;</span></span>
<span class="line"><span style="color:#D4D4D4;">/</span><span style="color:#808080;">&gt;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>Displaying a standalone date value without a model or other source of metadata:</p><div class="language-vue-html ext-vue-html line-numbers-mode"><pre class="shiki" style="background-color:#1E1E1E;"><code><span class="line"><span style="color:#808080;">&lt;</span><span style="color:#569CD6;">c-display</span><span style="color:#D4D4D4;"> :</span><span style="color:#9CDCFE;">value</span><span style="color:#D4D4D4;">=</span><span style="color:#D4D4D4;">&quot;</span><span style="color:#9CDCFE;">dateProp</span><span style="color:#D4D4D4;">&quot;</span><span style="color:#D4D4D4;"> </span><span style="color:#9CDCFE;">format</span><span style="color:#D4D4D4;">=</span><span style="color:#CE9178;">&quot;M/d/yyyy&quot;</span><span style="color:#D4D4D4;"> /</span><span style="color:#808080;">&gt;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h2 id="props" tabindex="-1"><a class="header-anchor" href="#props" aria-hidden="true">#</a> Props</h2>`,4),P=e("p",null,[s("A metadata specifier for the value being bound. Either a direct reference to the metadata object, or a string with the name of the value belonging to "),e("code",null,"model"),s(", or a string in dot-notation that starts with a type name.")],-1),M=e("p",null,[s("An object owning the value that was specified by the "),e("code",null,"for"),s(" prop.")],-1),N=e("p",null,[s("Shorthand for "),e("code",null,':options="{ format: format }"'),s(", allowing for specification of the format to be used when displaying dates.")],-1),S=s("See "),V=s("DisplayOptions"),j=s(" for details on the options available for "),O=e("code",null,"format",-1),B=s("."),L=s("Specify options for formatting some kinds of values, including dates. See "),U=s("DisplayOptions"),I=s(" for details."),K=r('<p>Can be provided the value to be displayed in conjunction with the <code>for</code> prop, as an alternative to the <code>model</code> prop.</p><p>This is an uncommon scenario - it is generally easier to use the <code>for</code>/<code>model</code> props together.</p><h2 id="slots" tabindex="-1"><a class="header-anchor" href="#slots" aria-hidden="true">#</a> Slots</h2><p><code>default</code> - Used to display fallback content if the value being displayed is either <code>null</code> or <code>&quot;&quot;</code> (empty string).</p>',4);function z($,G){const t=p("RouterLink"),l=p("router-link"),n=p("Prop");return d(),D("div",null,[y,c(" MARKER:summary "),e("p",null,[h,a(t,{to:"/stacks/vue/layers/metadata.html#value"},{default:o(()=>[m]),_:1}),_,a(t,{to:"/stacks/vue/layers/models.html#VueModelDisplayFunctions"},{default:o(()=>[f]),_:1}),v,a(t,{to:"/stacks/vue/layers/metadata.html"},{default:o(()=>[b]),_:1}),g]),c(" MARKER:summary-end "),e("nav",C,[e("ul",null,[e("li",null,[a(l,{to:"#datatypeattribute"},{default:o(()=>[E]),_:1})]),e("li",null,[a(l,{to:"#examples"},{default:o(()=>[k]),_:1})]),e("li",null,[a(l,{to:"#props"},{default:o(()=>[F]),_:1})]),e("li",null,[a(l,{to:"#slots"},{default:o(()=>[q]),_:1})])])]),x,e("p",null,[w,a(t,{to:"/stacks/vue/layers/api-clients.html#api-callers"},{default:o(()=>[T]),_:1}),R]),A,a(n,{def:"for: string | Property | Value",lang:"ts"}),P,a(n,{def:"model?: Model | DataSource",lang:"ts"}),M,a(n,{def:'format: DisplayOptions["format"]',lang:"ts"}),N,e("p",null,[S,a(t,{to:"/stacks/vue/layers/models.html#displayoptions"},{default:o(()=>[V]),_:1}),j,O,B]),a(n,{def:"options: DisplayOptions",lang:"ts"}),e("p",null,[L,a(t,{to:"/stacks/vue/layers/models.html#displayoptions"},{default:o(()=>[U]),_:1}),I]),a(n,{def:"value: any",lang:"ts"}),K])}const J=i(u,[["render",z],["__file","c-display.html.vue"]]);export{J as default};
