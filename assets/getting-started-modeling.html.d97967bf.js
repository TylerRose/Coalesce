import{_ as d,r as l,o as s,c,f as n,b as e,d as i,w as a,e as t,a as r}from"./app.83c59791.js";const u={},_=e("h1",{id:"data-modeling",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#data-modeling","aria-hidden":"true"},"#"),t(" Data Modeling")],-1),h=e("p",null,"At this point, you can open up the newly-created solution in Visual Studio and run your application. However, your application won't do much without a data model, so you will probably want to do the following before running:",-1),p=t("Create an initial "),m=t("Data Model"),g=t(" by adding EF entity classes to the data project and the corresponding "),f=e("code",null,"DbSet<>",-1),y=t(" properties to "),w=e("code",null,"AppDbContext",-1),b=t(". You will notice that the starter project includes a single model, "),R=e("code",null,"ApplicationUser",-1),x=t(", to start with. Feel free to change this model or remove it entirely. Read "),k=t("Entity Models"),V=t(" for more information about creating a data model."),C=r("<li><p>Run <code>dotnet ef migrations add Init</code> (Init can be any name) in the data project to create an initial database migration.</p></li><li><p>Run Coalesce&#39;s code generation by either:</p><ul><li>Running <code>dotnet coalesce</code> in the web project&#39;s root directory</li><li>Running the <code>coalesce</code> npm script (Vue) or gulp task (Knockout) in the Task Runner Explorer</li></ul></li>",2),E=e("p",null,"You're now at a point where you can start creating your own pages!",-1);function M(v,A){const o=l("RouterLink");return s(),c("div",null,[n(" MARKER:data-modeling "),_,h,e("ul",null,[e("li",null,[e("p",null,[p,i(o,{to:"/modeling/model-types/entities.html"},{default:a(()=>[m]),_:1}),g,f,y,w,b,R,x,i(o,{to:"/modeling/model-types/entities.html"},{default:a(()=>[k]),_:1}),V])]),C]),E,n(" MARKER:data-modeling-end ")])}const j=d(u,[["render",M],["__file","getting-started-modeling.html.vue"]]);export{j as default};
