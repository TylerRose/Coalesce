import{_ as l,r as i,o as r,c as h,b as t,d as o,w as a,f as c,e,a as _}from"./app.83c59791.js";const u={},p=t("h1",{id:"attributes",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#attributes","aria-hidden":"true"},"#"),e(" Attributes")],-1),m=t("p",null,[e("Coalesce provides a number of C# attributes that can be used to decorate your model classes and their properties in order to customize behavior, appearance, security, and more. Coalesce also supports a number of annotations from "),t("code",null,"System.ComponentModel.DataAnnotations"),e(".")],-1),f={class:"table-of-contents"},b=e("Coalesce Attributes"),y=e("ComponentModel Attributes"),g=e("[Display]"),v=e("[DisplayName]"),w=e("[Required]"),x=e("[Range]"),k=e("[MinLength]"),C=e("[MaxLength]"),D=e("[DataType]"),M=e("[ForeignKey]"),S=e("[InverseProperty]"),N=e("[DatabaseGenerated]"),L=e("[NotMapped]"),R=t("h2",{id:"coalesce-attributes",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#coalesce-attributes","aria-hidden":"true"},"#"),e(" Coalesce Attributes")],-1),V=t("p",null,"Browse the list in the sidebar to learn about the attributes that Coalesce provides that can be used to decorate your models.",-1),A=_('<h2 id="componentmodel-attributes" tabindex="-1"><a class="header-anchor" href="#componentmodel-attributes" aria-hidden="true">#</a> ComponentModel Attributes</h2><p>Coalesce also supports a number of the built-in <code>System.ComponentModel.DataAnnotations</code> attributes and will use these to shape the generated code.</p><h3 id="display" tabindex="-1"><a class="header-anchor" href="#display" aria-hidden="true">#</a> [Display]</h3><p>The displayed name and description of a property, as well as the order in which it appears in generated views, can be set via the <code>[Display]</code> attribute. By default, properties will be displayed in the order in which they are defined in their class.</p><h3 id="displayname" tabindex="-1"><a class="header-anchor" href="#displayname" aria-hidden="true">#</a> [DisplayName]</h3><p>The displayed name of a property can also be set via the <code>[DisplayName]</code> attribute.</p><h3 id="required" tabindex="-1"><a class="header-anchor" href="#required" aria-hidden="true">#</a> [Required]</h3>',7),E=e("Properties with "),F=t("code",null,"[Required]",-1),P=e(" will generate client validation rules. See "),T=e("[ClientValidation]"),B=e("."),q=t("h3",{id:"range",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#range","aria-hidden":"true"},"#"),e(" [Range]")],-1),I=e("Properties with "),K=t("code",null,"[Range]",-1),G=e(" will generate client validation rules. See "),O=e("[ClientValidation]"),z=e("."),j=t("h3",{id:"minlength",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#minlength","aria-hidden":"true"},"#"),e(" [MinLength]")],-1),H=e("Properties with "),J=t("code",null,"[MinLength]",-1),Q=e(" will generate client validation rules. See "),U=e("[ClientValidation]"),W=e("."),X=t("h3",{id:"maxlength",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#maxlength","aria-hidden":"true"},"#"),e(" [MaxLength]")],-1),Y=e("Properties with "),Z=t("code",null,"[MaxLength]",-1),$=e(" will generate client validation rules. See "),ee=e("[ClientValidation]"),te=e("."),oe=t("h3",{id:"datatype",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#datatype","aria-hidden":"true"},"#"),e(" [DataType]")],-1),ae=e("Some values of "),ne=t("code",null,"DataType",-1),se=e(" when provided to "),ie=t("code",null,"DataTypeAttribute",-1),de=e(" on a "),le=t("code",null,"string",-1),re=e(" property will alter the behavior of the "),he=e("Vue Components"),ce=e(". See "),_e=e("c-display"),ue=e(" and See "),pe=e("c-display"),me=e(" for details."),fe=t("h3",{id:"foreignkey",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#foreignkey","aria-hidden":"true"},"#"),e(" [ForeignKey]")],-1),be=e("Normally, Coalesce figures out which properties are foreign keys, but if you don't use standard EF naming conventions then you'll need to annotate with "),ye=t("code",null,"[ForeignKey]",-1),ge=e(" to help out both EF and Coalesce. See the "),ve={href:"https://docs.microsoft.com/en-us/ef/core/modeling/relationships",target:"_blank",rel:"noopener noreferrer"},we=e("Entity Framework Relationships"),xe=e(" documentation for more."),ke=t("h3",{id:"inverseproperty",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#inverseproperty","aria-hidden":"true"},"#"),e(" [InverseProperty]")],-1),Ce=e("Sometimes, Coalesce (and EF, too) can have trouble figuring out what the foreign key is supposed to be for a collection navigation property. See the "),De={href:"https://docs.microsoft.com/en-us/ef/core/modeling/relationships",target:"_blank",rel:"noopener noreferrer"},Me=e("Entity Framework Relationships"),Se=e(" documentation for details on how and why to use "),Ne=t("code",null,"[InverseProperty]",-1),Le=e("."),Re=t("h3",{id:"databasegenerated",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#databasegenerated","aria-hidden":"true"},"#"),e(" [DatabaseGenerated]")],-1),Ve=e("Primary Keys with "),Ae=t("code",null,"[DatabaseGenerated(DatabaseGeneratedOption.None)]",-1),Ee=e(" will be settable on the client and will be appropriately handled by the "),Fe=e("Standard Behaviors"),Pe=e(" on the server. Currently unsupported on the "),Te=e("Knockout front-end stack"),Be=e("."),qe=t("h3",{id:"notmapped",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#notmapped","aria-hidden":"true"},"#"),e(" [NotMapped]")],-1),Ie=e("Model properties that aren't mapped to the database should be marked with "),Ke=t("code",null,"[NotMapped]",-1),Ge=e(" so that Coalesce doesn't try to load them from the database when "),Oe=e("searching"),ze=e(" or carrying out the "),je=e("Default Loading Behavior"),He=e(".");function Je(Qe,Ue){const n=i("router-link"),s=i("RouterLink"),d=i("ExternalLinkIcon");return r(),h("div",null,[p,m,t("nav",f,[t("ul",null,[t("li",null,[o(n,{to:"#coalesce-attributes"},{default:a(()=>[b]),_:1})]),t("li",null,[o(n,{to:"#componentmodel-attributes"},{default:a(()=>[y]),_:1}),t("ul",null,[t("li",null,[o(n,{to:"#display"},{default:a(()=>[g]),_:1})]),t("li",null,[o(n,{to:"#displayname"},{default:a(()=>[v]),_:1})]),t("li",null,[o(n,{to:"#required"},{default:a(()=>[w]),_:1})]),t("li",null,[o(n,{to:"#range"},{default:a(()=>[x]),_:1})]),t("li",null,[o(n,{to:"#minlength"},{default:a(()=>[k]),_:1})]),t("li",null,[o(n,{to:"#maxlength"},{default:a(()=>[C]),_:1})]),t("li",null,[o(n,{to:"#datatype"},{default:a(()=>[D]),_:1})]),t("li",null,[o(n,{to:"#foreignkey"},{default:a(()=>[M]),_:1})]),t("li",null,[o(n,{to:"#inverseproperty"},{default:a(()=>[S]),_:1})]),t("li",null,[o(n,{to:"#databasegenerated"},{default:a(()=>[N]),_:1})]),t("li",null,[o(n,{to:"#notmapped"},{default:a(()=>[L]),_:1})])])])])]),R,V,c(" TODO: Is there some kind of metadata we can use to dynamically source the coalesce attribute page and list them here instead of directing the reader to the sidebar? "),A,t("p",null,[E,F,P,o(s,{to:"/modeling/model-components/attributes/client-validation.html"},{default:a(()=>[T]),_:1}),B]),q,t("p",null,[I,K,G,o(s,{to:"/modeling/model-components/attributes/client-validation.html"},{default:a(()=>[O]),_:1}),z]),j,t("p",null,[H,J,Q,o(s,{to:"/modeling/model-components/attributes/client-validation.html"},{default:a(()=>[U]),_:1}),W]),X,t("p",null,[Y,Z,$,o(s,{to:"/modeling/model-components/attributes/client-validation.html"},{default:a(()=>[ee]),_:1}),te]),oe,t("p",null,[ae,ne,se,ie,de,le,re,o(s,{to:"/stacks/vue/coalesce-vue-vuetify/overview.html"},{default:a(()=>[he]),_:1}),ce,o(s,{to:"/stacks/vue/coalesce-vue-vuetify/components/c-display.html"},{default:a(()=>[_e]),_:1}),ue,o(s,{to:"/stacks/vue/coalesce-vue-vuetify/components/c-input.html"},{default:a(()=>[pe]),_:1}),me]),fe,t("p",null,[be,ye,ge,t("a",ve,[we,o(d)]),xe]),ke,t("p",null,[Ce,t("a",De,[Me,o(d)]),Se,Ne,Le]),Re,t("p",null,[Ve,Ae,Ee,o(s,{to:"/modeling/model-components/behaviors.html#standard-behaviors"},{default:a(()=>[Fe]),_:1}),Pe,o(s,{to:"/stacks/ko/overview.html"},{default:a(()=>[Te]),_:1}),Be]),qe,t("p",null,[Ie,Ke,Ge,o(s,{to:"/modeling/model-components/attributes/search.html"},{default:a(()=>[Oe]),_:1}),ze,o(s,{to:"/modeling/model-components/data-sources.html#default-loading-behavior"},{default:a(()=>[je]),_:1}),He])])}const Xe=l(u,[["render",Je],["__file","attributes.html.vue"]]);export{Xe as default};
