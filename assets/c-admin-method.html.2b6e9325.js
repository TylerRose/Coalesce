import{_ as i,r as l,o as c,c as r,f as d,b as t,d as o,w as a,e,a as h}from"./app.83c59791.js";const p={},m=t("h1",{id:"c-admin-method",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#c-admin-method","aria-hidden":"true"},"#"),e(" c-admin-method")],-1),u=e("Provides an interface for invoking a "),_=e("method"),f=e(" and rendering its result, designed to be use in an admin page."),v=e("For each parameter of a method, a "),y=e("c-input"),D=e(" will be rendered to accept the input of that parameter. A button is provided to trigger an invocation of the method, progress and errors are rendered with a "),g=e("c-loader-status"),w=e(", and results are rendered with "),b=e("c-display"),k=e("."),C=h(`<h2 id="examples" tabindex="-1"><a class="header-anchor" href="#examples" aria-hidden="true">#</a> Examples</h2><div class="language-vue-html ext-vue-html line-numbers-mode"><pre class="shiki" style="background-color:#1E1E1E;"><code><span class="line"><span style="color:#808080;">&lt;</span><span style="color:#569CD6;">c-admin-method</span><span style="color:#D4D4D4;"> :</span><span style="color:#9CDCFE;">model</span><span style="color:#D4D4D4;">=</span><span style="color:#D4D4D4;">&quot;</span><span style="color:#9CDCFE;">person</span><span style="color:#D4D4D4;">&quot;</span><span style="color:#D4D4D4;"> </span><span style="color:#9CDCFE;">for</span><span style="color:#D4D4D4;">=</span><span style="color:#CE9178;">&quot;setTitle&quot;</span><span style="color:#D4D4D4;"> </span><span style="color:#9CDCFE;">auto-reload-model</span><span style="color:#D4D4D4;"> /</span><span style="color:#808080;">&gt;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h2 id="props" tabindex="-1"><a class="header-anchor" href="#props" aria-hidden="true">#</a> Props</h2>`,3),x=t("p",null,"A metadata specifier for the method. One of:",-1),E=t("ul",null,[t("li",null,[e("A string with the name of the method belonging to "),t("code",null,"model"),e(".")]),t("li",null,"A direct reference to a method's metadata object."),t("li",null,"A string in dot-notation that starts with a type name and ending with a method name.")],-1),A=e("An "),M=e("ViewModel"),V=e(" or "),R=e("ListViewModel"),F=e(" owning the method and "),N=e("API Caller"),P=e(" that was specified by the "),q=t("code",null,"for",-1),L=e(" prop."),B=t("p",null,[e("True if the "),t("code",null,"model"),e(" should have its "),t("code",null,"$load"),e(" invoked after a successful invocation of the method.")],-1);function T(K,j){const s=l("RouterLink"),n=l("Prop");return c(),r("div",null,[m,d(" MARKER:summary "),t("p",null,[u,o(s,{to:"/modeling/model-components/methods.html"},{default:a(()=>[_]),_:1}),f]),d(" MARKER:summary-end "),t("p",null,[v,o(s,{to:"/stacks/vue/coalesce-vue-vuetify/components/c-input.html"},{default:a(()=>[y]),_:1}),D,o(s,{to:"/stacks/vue/coalesce-vue-vuetify/components/c-loader-status.html"},{default:a(()=>[g]),_:1}),w,o(s,{to:"/stacks/vue/coalesce-vue-vuetify/components/c-display.html"},{default:a(()=>[b]),_:1}),k]),C,o(n,{def:"for: string | Method",lang:"ts"}),x,E,o(n,{def:"model: ViewModel | ListViewModel",lang:"ts"}),t("p",null,[A,o(s,{to:"/stacks/vue/layers/viewmodels.html"},{default:a(()=>[M]),_:1}),V,o(s,{to:"/stacks/vue/layers/viewmodels.html"},{default:a(()=>[R]),_:1}),F,o(s,{to:"/stacks/vue/layers/api-clients.html#api-callers"},{default:a(()=>[N]),_:1}),P,q,L]),o(n,{def:"autoReloadModel?: boolean = false",lang:"ts"}),B])}const O=i(p,[["render",T],["__file","c-admin-method.html.vue"]]);export{O as default};
